---
- name: Smoke tests - database servers
  hosts:
    - database_servers
  gather_facts: no
  become: no

  tags:
    - smoketest

  tasks:
    - name: Check database port is open and listening
      wait_for:
        host: "{{ inventory_hostname }}"
        port: "{{ postgres_port }}"
        timeout: 10
        state: started
      delegate_to: "{{ item }}"
      loop: "{{ groups.app_servers }}"

    - name: Smoketest Postgres flask database
      postgresql_ping:
        db: flask_db
        login_host: "{{ inventory_hostname }}"
        login_user: flask
        login_password: redhat
        ssl_mode: disable
      delegate_to: "{{ groups.app_servers[0] }}"

- name: Smoke tests - application servers
  hosts:
    - app_servers
  gather_facts: no
  become: no

  tags:
    - smoketest

  tasks:
    - name: Check flask port is open and listening
      wait_for:
        host: "{{ inventory_hostname }}"
        port: "{{ flask_port }}"
        timeout: 10
        state: started
      delegate_to: "{{ item }}"
      loop: "{{ groups.load_balancers }}"

- name: Smoke tests - load balancers
  hosts: load_balancers
  become: no
  gather_facts: no

  tags:
    - smoketest

  tasks:
    - name: Check load balancer port is open and listening
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ load_balancer_port }}"
        timeout: 10
        state: started
      delegate_to: localhost

    - name: Check webserver for correct response
      uri:
        url: "http://{{ ansible_host }}/ping"
        return_content: yes
      until: '"alive" in result.content'
      retries: 10
      delay: 1
      register: result
      delegate_to: localhost
